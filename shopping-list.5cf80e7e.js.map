{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,ECVA,EAAA,OAAA,CAAiB,IAAA,IAAoB,8CAAA,YAAA,GAAA,EAA+C,QAAQ,E,G,E,Q,S,C,C,C,ECA5F,EAAA,OAAA,CAAiB,IAAA,IAAoB,kDAAA,YAAA,GAAA,EAAmD,QAAQ,E,GCAhG,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,0KCA5F,sCAAqC;A,I,E,E,S,E,E,SAIrC,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,yCAAyC;AACzC,IAAM,EAAwB,SAAS,aAAa,CAAC,4BAC/C,EAAoB,SAAS,aAAa,CAAC,UAC3C,EAAS,SAAS,aAAa,CAAC,WAChC,EAAY,SAAS,aAAa,CAAC,eAGnC,EAAiB,SAAS,cAAc,CAAC,oBACzC,EAAoB,SAAS,cAAc,CAAC,uBAC5C,EAAiB,SAAS,cAAc,CAAC,oBACzC,EAAkB,SAAS,aAAa,CAAC,sBACzC,EAAiB,SAAS,aAAa,CAAC,qBACxC,EAAqB,SAAS,aAAa,CAAC,yBAC5C,EAAkB,SAAS,aAAa,CAAC,sBAE/C,SAAS,IACP,EAAmB,QAAQ,CAAG,AAAgB,IAAhB,EAC9B,EAAe,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9d4f5abe5576dc17.js","node_modules/@parcel/runtime-js/lib/runtime-08f31842dc6d3694.js","node_modules/@parcel/runtime-js/lib/runtime-0b42c4351edf8b41.js","src/js/shopping-list.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"ifJdc\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $d49cb2d7b03f6a77$export$6503ec6e8aabbaf, (v) => $d49cb2d7b03f6a77$export$6503ec6e8aabbaf = v);\nvar $d49cb2d7b03f6a77$export$6503ec6e8aabbaf;\nvar $d49cb2d7b03f6a77$export$f7ad0328861e2f03;\n\"use strict\";\nvar $d49cb2d7b03f6a77$var$mapping = new Map();\nfunction $d49cb2d7b03f6a77$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$d49cb2d7b03f6a77$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $d49cb2d7b03f6a77$var$resolve(id) {\n    var resolved = $d49cb2d7b03f6a77$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$d49cb2d7b03f6a77$export$6503ec6e8aabbaf = $d49cb2d7b03f6a77$var$register;\n$d49cb2d7b03f6a77$export$f7ad0328861e2f03 = $d49cb2d7b03f6a77$var$resolve;\n\n});\n\nparcelRegister(\"erv9X\", function(module, exports) {\nmodule.exports = new URL(\"iconAmazon@x1.85fa6e62.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"bLbWr\", function(module, exports) {\nmodule.exports = new URL(\"iconAppleBooks@x1.b94dca13.png\", import.meta.url).toString();\n\n});\n\nvar $90f6d170d770d002$exports = {};\n\n(parcelRequire(\"ifJdc\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"l5uYD\",\"shopping-list.5cf80e7e.js\",\"3QVNn\",\"iconAmazon@x1.85fa6e62.png\",\"dN8tf\",\"iconAppleBooks@x1.b94dca13.png\"]'));\n\n// Import the icons from local assets\n\nvar $erv9X = parcelRequire(\"erv9X\");\n\nvar $bLbWr = parcelRequire(\"bLbWr\");\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    // Query the document for elements needed\n    const shoppingListContainer = document.querySelector(\".shopping-list-container\");\n    const emptyClassElement = document.querySelector(\".empty\");\n    const navbar = document.querySelector(\".navbar\");\n    const pageInput = document.querySelector(\".page-input\");\n    // Select the page buttons\n    const prevPageButton = document.getElementById(\"prev-page-button\");\n    const currentPageButton = document.getElementById(\"current-page-button\");\n    const nextPageButton = document.getElementById(\"next-page-button\");\n    const firstPageButton = document.querySelector(\".first-page-button\");\n    const lastPageButton = document.querySelector(\".last-page-button\");\n    const previousPageButton = document.querySelector(\".previous-page-button\");\n    const nextPageButton2 = document.querySelector(\".next-page-button2\");\n    function updateNavigationButtonState() {\n        previousPageButton.disabled = currentPage === 1;\n        nextPageButton.disabled = currentPage === totalPages;\n        firstPageButton.disabled = currentPage === 1;\n        lastPageButton.disabled = currentPage === totalPages;\n    }\n    firstPageButton.addEventListener(\"click\", ()=>goToPage(1));\n    lastPageButton.addEventListener(\"click\", ()=>goToPage(totalPages));\n    previousPageButton.addEventListener(\"click\", ()=>goToPage(currentPage - 1));\n    nextPageButton.addEventListener(\"click\", ()=>goToPage(currentPage + 1));\n    nextPageButton2.addEventListener(\"click\", ()=>goToPage(currentPage + 1));\n    // Retrieve stored books or initialize an empty array if none exist\n    let storedBooks = JSON.parse(localStorage.getItem(\"storage-book-data\")) || [];\n    let currentPage = 1;\n    const booksPerPage = 3;\n    const totalPages = Math.ceil(storedBooks.length / booksPerPage);\n    // Update the visibility of the navigation bar based on page count\n    function updateNavbarVisibility() {\n        navbar.classList.toggle(\"is-hidden\", totalPages <= 1);\n    }\n    // Update the active state of the page buttons\n    function updateActivePageButton() {\n        // Remove active class from all buttons\n        document.querySelectorAll(\".page-button\").forEach((button)=>{\n            button.classList.remove(\"active\");\n            button.style.background = \"\"; // Ensure the background is cleared for non-active buttons\n        });\n        // Add active class to the current page button\n        const activeButton = document.querySelector(`.page-button[data-page=\"${currentPage}\"]`);\n        if (activeButton) {\n            activeButton.classList.add(\"active\");\n            activeButton.style.background = \"black\"; // Set the background to black for the active button\n        }\n    }\n    // Update the page buttons to reflect the correct page numbers and assign data attributes\n    function updatePageButtons() {\n        const pageNumbers = currentPage === 1 ? [\n            1,\n            2,\n            3\n        ] : [\n            currentPage - 1,\n            currentPage,\n            currentPage + 1\n        ];\n        prevPageButton.textContent = pageNumbers[0];\n        prevPageButton.setAttribute(\"data-page\", pageNumbers[0]);\n        currentPageButton.textContent = pageNumbers[1];\n        currentPageButton.setAttribute(\"data-page\", pageNumbers[1]);\n        nextPageButton.textContent = pageNumbers[2];\n        nextPageButton.setAttribute(\"data-page\", pageNumbers[2]);\n        prevPageButton.disabled = currentPage === 1;\n        nextPageButton.disabled = currentPage === totalPages;\n        updateActivePageButton();\n    }\n    // Navigate to a specific page of the shopping list\n    function goToPage(page) {\n        if (page < 1 || page > totalPages) return;\n        currentPage = page;\n        renderShoppingList();\n        updatePageButtons();\n        updateNavigationButtonState();\n    }\n    // Event listener for the page input to handle the \"Enter\" keypress\n    pageInput.addEventListener(\"keypress\", (event)=>{\n        if (event.key === \"Enter\") {\n            const page = Number(pageInput.value);\n            if (page) goToPage(page);\n        }\n    });\n    // Event listeners for pagination buttons\n    document.querySelectorAll(\".page-button\").forEach((button)=>{\n        button.addEventListener(\"click\", (event)=>{\n            const page = Number(event.target.getAttribute(\"data-page\"));\n            if (page) goToPage(page);\n        });\n    });\n    // Hide the empty list placeholder if there are items\n    if (storedBooks.length > 0) emptyClassElement.classList.add(\"is-hidden\");\n    // Remove a book from the shopping list\n    function removeBookFromShoppingList(bookId) {\n        storedBooks = storedBooks.filter((book)=>book.id !== bookId);\n        localStorage.setItem(\"storage-book-data\", JSON.stringify(storedBooks));\n        renderShoppingList();\n    }\n    // Create a shopping list item (unchanged as requested)\n    function createShoppingListItem(book) {\n        return `\n      <li class=\"shopping-list-item\" data-id=\"${book.id}\">\n        <img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"shopping-list-item-image\">\n        <div class=\"shopping-list-item-info\">\n          <h3 class=\"shopping-list-item-title font-title\">${book.title}</h3>\n          <p class=\"shopping-list-item-category font-category\">${book.list_name}</p>\n          <p class=\"shopping-list-item-description font-description\">${book.description}</p>\n          <p class=\"shopping-list-item-author font-author\">${book.author}</p>\n          <ul class=\"buy-links\">\n            <li class=\"buy-links-item link-position\">\n              <a href=\"${book.marketAmazon}\" target=\"_blank\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($erv9X))}\" alt=\"Amazon\"></a>\n            </li>\n            <li class=\"buy-links-item link-position\">\n              <a href=\"${book.marketAppleBooks}\" target=\"_blank\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($bLbWr))}\" alt=\"AppleBooks\"></a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"icon-trash icon-background\">\n          <svg width=\"20px\" height=\"20px\" fill=\"none\" viewBox=\"0 0 16 16\">\n            <path d=\"M6 2H10M2 4H14M12.6667 4L12.1991 11.0129C12.129 12.065 12.0939 12.5911 11.8667 12.99C11.6666 13.3412 11.3648 13.6235 11.0011 13.7998C10.588 14 10.0607 14 9.00623 14H6.99377C5.93927 14 5.41202 14 4.99889 13.7998C4.63517 13.6235 4.33339 13.3412 4.13332 12.99C3.90607 12.5911 3.871 12.065 3.80086 11.0129L3.33333 4M6.66667 7V10.3333M9.33333 7V10.3333\" stroke=\"white\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n        </div>\n      </li>\n    `;\n    }\n    // Render the shopping list items on the page\n    function renderShoppingList() {\n        if (shoppingListContainer) {\n            const startIndex = (currentPage - 1) * booksPerPage;\n            const endIndex = startIndex + booksPerPage;\n            const booksToDisplay = storedBooks.slice(startIndex, endIndex);\n            const shoppingListItems = booksToDisplay.map(createShoppingListItem).join(\"\");\n            shoppingListContainer.innerHTML = shoppingListItems;\n            // Add event listeners for the delete icons\n            shoppingListContainer.querySelectorAll(\".icon-trash\").forEach((icon)=>{\n                icon.addEventListener(\"click\", ()=>{\n                    const bookId = icon.closest(\".shopping-list-item\").getAttribute(\"data-id\");\n                    removeBookFromShoppingList(bookId);\n                });\n            });\n        } else console.error(\"Element .shopping-list-container not found!\");\n    }\n    // Initial render of the shopping list and navigation elements\n    renderShoppingList();\n    updateNavbarVisibility();\n    updatePageButtons();\n    updateNavigationButtonState();\n});\n\n\n//# sourceMappingURL=shopping-list.5cf80e7e.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(\"iconAmazon@x1.85fa6e62.png\").toString();","module.exports = new __parcel__URL__(\"iconAppleBooks@x1.b94dca13.png\").toString();","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"l5uYD\\\",\\\"shopping-list.5cf80e7e.js\\\",\\\"3QVNn\\\",\\\"iconAmazon@x1.85fa6e62.png\\\",\\\"dN8tf\\\",\\\"iconAppleBooks@x1.b94dca13.png\\\"]\"));","// Import the icons from local assets\nimport amazonIcon from '../images/pop-up-modal/iconAmazon@x1.png';\nimport appleBooksIcon from '../images/pop-up-modal/iconAppleBooks@x1.png';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Query the document for elements needed\n  const shoppingListContainer = document.querySelector('.shopping-list-container');\n  const emptyClassElement = document.querySelector('.empty');\n  const navbar = document.querySelector('.navbar');\n  const pageInput = document.querySelector('.page-input');\n\n  // Select the page buttons\n  const prevPageButton = document.getElementById('prev-page-button');\n  const currentPageButton = document.getElementById('current-page-button');\n  const nextPageButton = document.getElementById('next-page-button');\n  const firstPageButton = document.querySelector('.first-page-button');\n  const lastPageButton = document.querySelector('.last-page-button');\n  const previousPageButton = document.querySelector('.previous-page-button');\n  const nextPageButton2 = document.querySelector('.next-page-button2');\n\n  function updateNavigationButtonState() {\n    previousPageButton.disabled = currentPage === 1;\n    nextPageButton.disabled = currentPage === totalPages;\n    firstPageButton.disabled = currentPage === 1;\n    lastPageButton.disabled = currentPage === totalPages;\n  }\n\n  firstPageButton.addEventListener('click', () => goToPage(1));\n  lastPageButton.addEventListener('click', () => goToPage(totalPages));\n  previousPageButton.addEventListener('click', () => goToPage(currentPage - 1));\n  nextPageButton.addEventListener('click', () => goToPage(currentPage + 1));\n  nextPageButton2.addEventListener('click', () => goToPage(currentPage + 1));\n\n  // Retrieve stored books or initialize an empty array if none exist\n  let storedBooks = JSON.parse(localStorage.getItem('storage-book-data')) || [];\n  let currentPage = 1;\n  const booksPerPage = 3;\n  const totalPages = Math.ceil(storedBooks.length / booksPerPage);\n\n  // Update the visibility of the navigation bar based on page count\n  function updateNavbarVisibility() {\n    navbar.classList.toggle('is-hidden', totalPages <= 1);\n  }\n\n  // Update the active state of the page buttons\n  function updateActivePageButton() {\n    // Remove active class from all buttons\n    document.querySelectorAll('.page-button').forEach(button => {\n      button.classList.remove('active');\n      button.style.background = ''; // Ensure the background is cleared for non-active buttons\n    });\n\n    // Add active class to the current page button\n    const activeButton = document.querySelector(`.page-button[data-page=\"${currentPage}\"]`);\n    if (activeButton) {\n      activeButton.classList.add('active');\n      activeButton.style.background = 'black'; // Set the background to black for the active button\n    }\n  }\n\n  // Update the page buttons to reflect the correct page numbers and assign data attributes\n  function updatePageButtons() {\n    const pageNumbers =\n      currentPage === 1 ? [1, 2, 3] : [currentPage - 1, currentPage, currentPage + 1];\n\n    prevPageButton.textContent = pageNumbers[0];\n    prevPageButton.setAttribute('data-page', pageNumbers[0]);\n    currentPageButton.textContent = pageNumbers[1];\n    currentPageButton.setAttribute('data-page', pageNumbers[1]);\n    nextPageButton.textContent = pageNumbers[2];\n    nextPageButton.setAttribute('data-page', pageNumbers[2]);\n\n    prevPageButton.disabled = currentPage === 1;\n    nextPageButton.disabled = currentPage === totalPages;\n\n    updateActivePageButton();\n  }\n\n  // Navigate to a specific page of the shopping list\n  function goToPage(page) {\n    if (page < 1 || page > totalPages) return;\n    currentPage = page;\n    renderShoppingList();\n    updatePageButtons();\n    updateNavigationButtonState();\n  }\n\n  // Event listener for the page input to handle the \"Enter\" keypress\n  pageInput.addEventListener('keypress', event => {\n    if (event.key === 'Enter') {\n      const page = Number(pageInput.value);\n      if (page) {\n        goToPage(page);\n      }\n    }\n  });\n\n  // Event listeners for pagination buttons\n  document.querySelectorAll('.page-button').forEach(button => {\n    button.addEventListener('click', event => {\n      const page = Number(event.target.getAttribute('data-page'));\n      if (page) {\n        goToPage(page);\n      }\n    });\n  });\n\n  // Hide the empty list placeholder if there are items\n  if (storedBooks.length > 0) {\n    emptyClassElement.classList.add('is-hidden');\n  }\n\n  // Remove a book from the shopping list\n  function removeBookFromShoppingList(bookId) {\n    storedBooks = storedBooks.filter(book => book.id !== bookId);\n    localStorage.setItem('storage-book-data', JSON.stringify(storedBooks));\n    renderShoppingList();\n  }\n\n  // Create a shopping list item (unchanged as requested)\n  function createShoppingListItem(book) {\n    return `\n      <li class=\"shopping-list-item\" data-id=\"${book.id}\">\n        <img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"shopping-list-item-image\">\n        <div class=\"shopping-list-item-info\">\n          <h3 class=\"shopping-list-item-title font-title\">${book.title}</h3>\n          <p class=\"shopping-list-item-category font-category\">${book.list_name}</p>\n          <p class=\"shopping-list-item-description font-description\">${book.description}</p>\n          <p class=\"shopping-list-item-author font-author\">${book.author}</p>\n          <ul class=\"buy-links\">\n            <li class=\"buy-links-item link-position\">\n              <a href=\"${book.marketAmazon}\" target=\"_blank\"><img src=\"${amazonIcon}\" alt=\"Amazon\"></a>\n            </li>\n            <li class=\"buy-links-item link-position\">\n              <a href=\"${book.marketAppleBooks}\" target=\"_blank\"><img src=\"${appleBooksIcon}\" alt=\"AppleBooks\"></a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"icon-trash icon-background\">\n          <svg width=\"20px\" height=\"20px\" fill=\"none\" viewBox=\"0 0 16 16\">\n            <path d=\"M6 2H10M2 4H14M12.6667 4L12.1991 11.0129C12.129 12.065 12.0939 12.5911 11.8667 12.99C11.6666 13.3412 11.3648 13.6235 11.0011 13.7998C10.588 14 10.0607 14 9.00623 14H6.99377C5.93927 14 5.41202 14 4.99889 13.7998C4.63517 13.6235 4.33339 13.3412 4.13332 12.99C3.90607 12.5911 3.871 12.065 3.80086 11.0129L3.33333 4M6.66667 7V10.3333M9.33333 7V10.3333\" stroke=\"white\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n        </div>\n      </li>\n    `;\n  }\n\n  // Render the shopping list items on the page\n  function renderShoppingList() {\n    if (shoppingListContainer) {\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToDisplay = storedBooks.slice(startIndex, endIndex);\n      const shoppingListItems = booksToDisplay.map(createShoppingListItem).join('');\n      shoppingListContainer.innerHTML = shoppingListItems;\n\n      // Add event listeners for the delete icons\n      shoppingListContainer.querySelectorAll('.icon-trash').forEach(icon => {\n        icon.addEventListener('click', () => {\n          const bookId = icon.closest('.shopping-list-item').getAttribute('data-id');\n          removeBookFromShoppingList(bookId);\n        });\n      });\n    } else {\n      console.error('Element .shopping-list-container not found!');\n    }\n  }\n  // Initial render of the shopping list and navigation elements\n  renderShoppingList();\n  updateNavbarVisibility();\n  updatePageButtons();\n  updateNavigationButtonState();\n});\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$d49cb2d7b03f6a77$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$d49cb2d7b03f6a77$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$erv9X","$bLbWr","document","addEventListener","shoppingListContainer","querySelector","emptyClassElement","navbar","pageInput","prevPageButton","getElementById","currentPageButton","nextPageButton","firstPageButton","lastPageButton","previousPageButton","nextPageButton2","updateNavigationButtonState","disabled","currentPage","totalPages","goToPage","storedBooks","localStorage","getItem","Math","ceil","updatePageButtons","pageNumbers","textContent","setAttribute","updateActivePageButton","querySelectorAll","forEach","button","classList","remove","style","background","activeButton","add","page","renderShoppingList","createShoppingListItem","book","book_image","title","list_name","description","author","marketAmazon","marketAppleBooks","startIndex","endIndex","booksToDisplay","slice","shoppingListItems","map","join","innerHTML","icon","bookId","closest","getAttribute","filter","setItem","stringify","console","error","event","key","Number","value","target","toggle"],"version":3,"file":"shopping-list.5cf80e7e.js.map"}